# Generated by Django 5.0.2 on 2024-05-18 17:23

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='DictionaryPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('word', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='TaskCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('score', models.IntegerField(default=0)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GuidebookItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='Без названия', max_length=255)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_%(app_label)s.%(class)s_set+', to='contenttypes.contenttype')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
        ),
        migrations.CreateModel(
            name='GuidebookOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_id', models.IntegerField(default=0)),
                ('id_guidebook_item', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='index.guidebookitem')),
            ],
        ),
        migrations.CreateModel(
            name='GuidebookTopics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('url', models.URLField(blank=True, max_length=255)),
                ('child', models.ManyToManyField(blank=True, to='index.guidebooktopics')),
                ('guidebook_item', models.ManyToManyField(blank=True, to='index.guidebookitem')),
                ('order', models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, to='index.guidebookorder')),
            ],
        ),
        migrations.CreateModel(
            name='TaskSimple',
            fields=[
                ('guidebookitem_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='index.guidebookitem')),
                ('question', models.TextField(blank=True)),
                ('answer', models.TextField(blank=True)),
                ('category', models.ManyToManyField(blank=True, related_name='tasks', to='index.taskcategory')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('index.guidebookitem',),
        ),
        migrations.CreateModel(
            name='TaskDifficultАrchitecture',
            fields=[
                ('guidebookitem_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='index.guidebookitem')),
                ('category', models.ManyToManyField(blank=True, related_name='tasksDifficultArchitecture', to='index.taskcategory')),
                ('task_simple', models.ManyToManyField(blank=True, to='index.tasksimple')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('index.guidebookitem',),
        ),
        migrations.CreateModel(
            name='TaskCompleted',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('completed', models.BooleanField(default=False)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('task', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='index.tasksimple')),
            ],
        ),
        migrations.CreateModel(
            name='Theory',
            fields=[
                ('guidebookitem_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='index.guidebookitem')),
                ('information', models.TextField(blank=True)),
                ('category', models.ManyToManyField(blank=True, related_name='theory', to='index.taskcategory')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('index.guidebookitem',),
        ),
    ]
